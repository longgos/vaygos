<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!-- 全局参数 -->
	<settings>
		<!-- 使全局的映射器启用或禁用缓存。 -->
		<setting name="cacheEnabled" value="true" />
		<!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载。 -->
		<setting name="lazyLoadingEnabled" value="true" />
		<!-- 当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载。 -->
		<setting name="aggressiveLazyLoading" value="true" />
		<!-- 是否允许单条sql 返回多个数据集 (取决于驱动的兼容性) default:true -->
		<setting name="multipleResultSetsEnabled" value="true" />
		<!-- 是否可以使用列的别名 (取决于驱动的兼容性) default:true -->
		<setting name="useColumnLabel" value="true" />
		<!-- 允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行。 default:false -->
		<setting name="useGeneratedKeys" value="false" />
		<!-- 指定 MyBatis 如何自动映射 数据基表的列 NONE：不隐射 PARTIAL:部分 FULL:全部 -->
		<setting name="autoMappingBehavior" value="PARTIAL" />
		<!-- 这是默认的执行类型 （SIMPLE: 简单； REUSE: 执行器可能重复使用prepared statements语句；BATCH: 执行器可以重复执行语句和批量更新） -->
		<setting name="defaultExecutorType" value="SIMPLE" />
		<!-- 使用驼峰命名法转换字段。 -->
		<setting name="mapUnderscoreToCamelCase" value="true" />
		<!-- 设置本地缓存范围 session:就会有数据的共享 statement:语句范围 (这样就不会有数据的共享 ) defalut:session -->
		<setting name="localCacheScope" value="SESSION" />
		<!-- 设置但JDBC类型为空时,某些驱动程序要指定值,default:OTHER，插入空值时不需要指定类型 -->
		<setting name="jdbcTypeForNull" value="NULL" />
		<!-- <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" /> -->
	</settings>

	<!-- 类型别名是为 Java类型命名一个短的名字。 它只和 XML配置有关,只用来减少类完全 限定名的多余部分
	<typeAliases>
		<typeAlias alias="BasicMemberFacade" type="com.hzr.gtlsy.facade.user.service.BasicMemberFacade" />
	</typeAliases> -->
	
	<!-- 采用此方式也可以进行mybatis配置文件映射，但是需要全路径，无法动态模糊配置,不建议使用该方法，请查看spring-mybatis.xml相关配置 -->
	<!-- <mappers> -->
		<!-- <mapper resource="mybatis/mapper/**/*.xml" /> -->
		<!-- 通过mapper元素的resource属性可以指定一个相对于类路径的Mapper.xml文件 -->  
		<!-- <mapper resource="mybatis/mapper/BasicMemberMapper.xml" /> -->
		<!-- 通过package元素将会把指定包下面的所有Mapper接口进行注册 -->  
		<!-- <package name="com.hzr.gtl.service.user.dao"/> -->
		<!-- 通过mapper元素的url属性可以指定一个通过URL请求道的Mapper.xml文件 -->  
		<!-- <mapper url="file:///E:/BasicMemberMapper.xml"/> -->
		<!-- 通过mapper元素的class属性可以指定一个Mapper接口进行注册 -->  
		<!-- <mapper class="com.hzr.gtl.service.user.dao.BasicMemberDao"/> -->
	<!-- </mappers> -->
    
    <!-- 插件配置 -->
<!-- 	<plugins>  -->
		<!-- <plugin interceptor="com.hzr.brick.common.persistence.interceptor.PaginationInterceptor" /> --> 
		<!-- 注意此处特殊，不能使用irsy里面的分页插件，只能使用brick中的 -->
<!-- 		<plugin interceptor="com.hzr.brick.common.persistence.plugin.PageInterceptor" /> -->
		<!-- <plugin interceptor="com.hzr.gtl.common.core.mybatis.plugin.PageInterceptor" /> -->
<!-- 	</plugins>  -->
</configuration>
